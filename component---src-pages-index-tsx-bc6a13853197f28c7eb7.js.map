{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./src/components/Intro.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/utils/misc.tsx","webpack:///./src/utils/styles.tsx","webpack:///./src/components/Stars.tsx"],"names":["createHTML","this","TitleWrapper","styled","div","props","theme","media","md","sm","xs","fixed","css","addRemToProperty","Title","h1","colors","secondary","Intro","pageQuery","Index","siteTitle","data","site","siteMetadata","title","Layout","transparentNavigation","Stars","Head","keywords","getRandomNumber","max","min","Math","floor","random","getRandomBackground","background","i","push","toString","slice","join","StarsConfig","windowWidth","windowHeight","containerOpacity","starsNumber","window","innerWidth","innerHeight","scale","stars","cursorInsideCanvas","pointer","x","y","pointerActive","evCache","prevPointersDistance","normalVelocity","velocity","tx","ty","z","addEventListeners","movePointer","userPositionX","userPositionY","ox","oy","resizeCanvas","canvas","devicePixelRatio","width","height","forEach","star","accelerate","acceleration","console","log","canvasRef","React","useRef","useState","context","setContext","useEffect","handleMouseMove","event","clientX","clientY","handleTouchMove","touches","preventDefault","handleMouseLeave","handleTouchLeave","handleResize","current","handleWheel","deltaY","handlePointerUp","filter","evCached","pointerId","removeEvent","length","renderCtx","getContext","addEventListener","currentPointersDistance","abs","document","update","direction","vx","vy","recycleStar","generateStars","step","clearRect","beginPath","lineCap","lineWidth","strokeStyle","moveTo","tailX","tailY","lineTo","stroke","requestAnimationFrame","removeEventListener","themeContext","useContext","ThemeContext","id","ref","style","backgroundColor","black","backgroundImage","opacity","position"],"mappings":"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","file":"component---src-pages-index-tsx-bc6a13853197f28c7eb7.js","sourcesContent":["'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {addRemToProperty} from '../styles/shared';\n\ntype TitleWrapperProps = {\n  fixed: boolean;\n};\n\nconst TitleWrapper = styled.div<TitleWrapperProps>`\n  pointer-events: none; \n  font-size: 1.7rem;\n  max-width: 36rem;\n  line-height: 1.3em;\n  ${props => props.theme.media.md`\n    max-width: 32rem;\n  `}\n  ${props => props.theme.media.sm`\n    max-width: 100%;\n    font-size: 1.5rem;\n  `}\n  ${props => props.theme.media.xs`\n    font-size: 1.35rem;\n  `}\n\n  ${props =>\n    props.fixed\n      ? css`\n          ${addRemToProperty('padding')};\n          position: absolute;\n          top: 0;\n          right: 0;\n          text-align: right;\n          ${props => props.theme.media.md`\n        text-align: left;\n        left: 0;\n        right: auto;\n      `}\n        `\n      : css`\n          text-align: left;\n        `}\n`;\n\nconst Title = styled.h1`\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  margin: 0px;\n  font-family: inherit;\n  font-size: inherit;\n  span {\n    color: ${props => props.theme.colors.secondary};\n    text-decoration: line-through;\n  }\n`;\n\ntype IntroProps = {\n  fixed: boolean;\n};\n\nconst Intro: React.FC<IntroProps> = props => (\n  <TitleWrapper {...props}>\n    <Title>\n      Hi, I am Ram√≥n Morcillo, a Software Engineer based in Madrid, Spain\n    </Title>\n  </TitleWrapper>\n);\n\nexport default Intro;\n","import React from 'react';\nimport {graphql} from 'gatsby';\nimport Intro from '../components/Intro';\nimport Head from '../components/Head';\nimport Layout from '../components/Layout';\nimport Stars from '../components/Stars';\n\ninterface IndexProps {\n  readonly data: PageQueryData;\n}\n\nconst Index: React.FC<IndexProps> = ({data}) => {\n  const siteTitle: string = data.site.siteMetadata.title;\n  return (\n    <Layout title={siteTitle} transparentNavigation={true}>\n      <Stars />\n      <Head\n        title=\"Home\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <section>\n        <Intro fixed={true} />\n      </section>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default Index;\n","export const getRandomNumber = (max = 10, min = 1) =>\n  Math.floor(Math.random() * max) + min;\n","import {getRandomNumber} from './misc';\n\nexport const getRandomColor = () =>\n  '#' + ('00000' + ((Math.random() * (1 << 24)) | 0).toString(16)).slice(-6);\n\nexport const getRandomBackground = () => {\n  const background = [];\n  for (let i = 0; i < getRandomNumber(); i++) {\n    background.push(`\n      radial-gradient(\n        circle at ${getRandomNumber(100)}% ${getRandomNumber(100)}%,\n        ${getRandomColor() + '0d'},\n        transparent ${getRandomNumber(100, 60)}%\n      )\n  `);\n  }\n  return background.join(',');\n};\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\nimport {getRandomBackground} from '../utils';\n\ntype Coordinates = {\n  x: number | null;\n  y: number | null;\n};\n\ntype Star = {\n  x: number;\n  y: number;\n  z: number;\n};\n\ninterface StarsProps {\n  readonly normalVelocity?: number;\n  readonly containerOpacity?: number;\n  readonly addEventListeners?: boolean;\n}\n\nconst Stars: React.FC<StarsProps> = (StarsConfig: StarsProps) => {\n  const {containerOpacity = 1} = StarsConfig;\n  const starsNumber =\n    typeof window !== 'undefined' &&\n    (window.innerWidth + window.innerHeight) / 8;\n  const starSize = 3;\n  const starMinScale = 0.2;\n  const overflowThreshold = 50;\n\n  let scale = 1; // device/pixel ratio\n  let windowWidth: number;\n  let windowHeight: number;\n\n  const stars: Star[] = [];\n  let cursorInsideCanvas = false;\n  let pointer: Coordinates = {x: null, y: null};\n  let pointerActive = true;\n  let evCache: PointerEvent[] = [];\n  let prevPointersDistance = -1;\n\n  const {normalVelocity = 0.0005} = StarsConfig;\n  const velocity = {x: 0, y: 0, tx: 0, ty: 0, z: normalVelocity};\n  const {addEventListeners = true} = StarsConfig;\n\n  const generateStars = () => {\n    for (let i = 0; i < starsNumber; i++) {\n      stars.push({\n        x: 0,\n        y: 0,\n        z: starMinScale + Math.random() * (1 - starMinScale)\n      });\n    }\n  };\n\n  const recycleStar = (star: Star) => {\n    let direction = 'z';\n\n    const vx = Math.abs(velocity.x),\n      vy = Math.abs(velocity.y);\n\n    if (vx > 1 || vy > 1) {\n      let axis;\n\n      if (vx > vy) {\n        axis = Math.random() < vx / (vx + vy) ? 'h' : 'v';\n      } else {\n        axis = Math.random() < vy / (vx + vy) ? 'v' : 'h';\n      }\n\n      if (axis === 'h') {\n        direction = velocity.x > 0 ? 'l' : 'r';\n      } else {\n        direction = velocity.y > 0 ? 't' : 'b';\n      }\n    }\n\n    star.z = starMinScale + Math.random() * (1 - starMinScale);\n\n    if (direction === 'z') {\n      star.x = Math.random() * windowWidth;\n      star.y = Math.random() * windowHeight;\n      star.z = 0.1;\n    } else if (direction === 'l') {\n      star.x = -overflowThreshold;\n      star.y = windowHeight * Math.random();\n    } else if (direction === 'r') {\n      star.x = windowWidth + overflowThreshold;\n      star.y = windowHeight * Math.random();\n    } else if (direction === 't') {\n      star.x = windowWidth * Math.random();\n      star.y = -overflowThreshold;\n    } else if (direction === 'b') {\n      star.x = windowWidth * Math.random();\n      star.y = windowHeight + overflowThreshold;\n    }\n  };\n\n  const placeStars = () => {\n    stars.forEach((star: Star) => {\n      star.x = Math.random() * windowWidth;\n      star.y = Math.random() * windowHeight;\n    });\n  };\n\n  const movePointer = (userPositionX: number, userPositionY: number) => {\n    if (!pointerActive) return;\n    if (typeof pointer.x === 'number' && typeof pointer.y === 'number') {\n      const ox = userPositionX - pointer.x,\n        oy = userPositionY - pointer.y;\n\n      velocity.tx =\n        velocity.tx - (ox / 8) * scale * (cursorInsideCanvas ? 1 : -1);\n      velocity.ty =\n        velocity.ty - (oy / 8) * scale * (cursorInsideCanvas ? 1 : -1);\n    }\n\n    pointer = {x: userPositionX, y: userPositionY};\n  };\n\n  const resizeCanvas = (canvas: any) => {\n    scale = window.devicePixelRatio || 1;\n\n    windowWidth = window.innerWidth * scale;\n    windowHeight = window.innerHeight * scale;\n\n    canvas.width = windowWidth;\n    canvas.height = windowHeight;\n\n    placeStars();\n  };\n\n  const accelerate = (acceleration: boolean) => {\n    console.log('accelerates');\n\n    pointer = {x: null, y: null};\n    pointerActive = !acceleration;\n    velocity.z = acceleration ? 0.1 : normalVelocity;\n  };\n\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(\n    null\n  );\n\n  React.useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      cursorInsideCanvas = true;\n      movePointer(event.clientX, event.clientY);\n    };\n\n    const handleTouchMove = (event: TouchEvent) => {\n      cursorInsideCanvas = true;\n      movePointer(event.touches[0].clientX, event.touches[0].clientY);\n      event.preventDefault();\n    };\n\n    const handleMouseLeave = () => {\n      cursorInsideCanvas = false;\n      pointer = {x: null, y: null};\n    };\n\n    const handleTouchLeave = () => {\n      cursorInsideCanvas = false;\n      pointer = {x: null, y: null};\n    };\n\n    const handleResize = () => {\n      resizeCanvas(canvasRef.current);\n    };\n\n    const handleWheel = (event: WheelEvent) => {\n      accelerate(event.deltaY < 0);\n    };\n\n    const handlePointerDown = (event: PointerEvent) => {\n      evCache.push(event);\n    };\n\n    const handlePointerMove = (event: PointerEvent) => {\n      for (let i = 0; i < evCache.length; i++) {\n        if (event.pointerId === evCache[i].pointerId) {\n          evCache[i] = event;\n          break;\n        }\n      }\n      if (evCache.length == 2) {\n        const currentPointersDistance = Math.abs(\n          evCache[0].clientX - evCache[1].clientX\n        );\n        accelerate(\n          prevPointersDistance > 0 &&\n            currentPointersDistance > prevPointersDistance\n        );\n        prevPointersDistance = currentPointersDistance;\n      }\n    };\n\n    const removeEvent = (event: PointerEvent) => {\n      evCache = evCache.filter(\n        evCached => evCached.pointerId !== event.pointerId\n      );\n    };\n\n    const handlePointerUp = (event: PointerEvent) => {\n      removeEvent(event);\n      if (evCache.length < 2) prevPointersDistance = -1;\n    };\n\n    if (canvasRef.current) {\n      const renderCtx = canvasRef.current.getContext('2d');\n\n      if (renderCtx) {\n        const canvas = canvasRef.current;\n        if (addEventListeners) {\n          canvas.addEventListener('pointerdown', handlePointerDown);\n          canvas.addEventListener('pointermove', handlePointerMove);\n          canvas.addEventListener('pointerup', handlePointerUp);\n          canvas.addEventListener('pointercancel', handlePointerUp);\n          canvas.addEventListener('pointerout', handlePointerUp);\n          canvas.addEventListener('pointerleave', handlePointerUp);\n\n          window.addEventListener('wheel', handleWheel);\n          window.addEventListener('resize', handleResize);\n          canvas.addEventListener('mousemove', handleMouseMove);\n          canvas.addEventListener('touchmove', handleTouchMove);\n          canvas.addEventListener('touchend', handleTouchLeave);\n          document.addEventListener('mouseleave', handleMouseLeave);\n        }\n        setContext(renderCtx);\n      }\n    }\n\n    if (context) {\n      const renderStars = () => {\n        stars.forEach(star => {\n          context.beginPath();\n          context.lineCap = 'round';\n          context.lineWidth = starSize * star.z * scale;\n          context.strokeStyle =\n            'rgba(255,255,255,' + (0.5 + 0.5 * Math.random()) + ')';\n\n          context.beginPath();\n          context.moveTo(star.x, star.y);\n\n          let tailX = velocity.x * 2;\n          let tailY = velocity.y * 2;\n\n          // stroke() wont work on an invisible line\n          if (Math.abs(tailX) < 0.1) tailX = 0.5;\n          if (Math.abs(tailY) < 0.1) tailY = 0.5;\n\n          context.lineTo(star.x + tailX, star.y + tailY);\n          context.stroke();\n        });\n      };\n\n      const update = () => {\n        velocity.tx *= 0.96;\n        velocity.ty *= 0.96;\n\n        velocity.x += (velocity.tx - velocity.x) * 0.8;\n        velocity.y += (velocity.ty - velocity.y) * 0.8;\n\n        stars.forEach(star => {\n          star.x +=\n            velocity.x * star.z +\n            (star.x - windowWidth / 2) * velocity.z * star.z;\n          star.y +=\n            velocity.y * star.z +\n            (star.y - windowHeight / 2) * velocity.z * star.z;\n          star.z += velocity.z;\n\n          // recycle when out of bounds\n          if (\n            star.x < -overflowThreshold ||\n            star.x > windowWidth + overflowThreshold ||\n            star.y < -overflowThreshold ||\n            star.y > windowHeight + overflowThreshold\n          ) {\n            recycleStar(star);\n          }\n        });\n      };\n\n      const step = () => {\n        context.clearRect(0, 0, windowWidth, windowHeight);\n        update();\n        renderStars();\n        requestAnimationFrame(step);\n      };\n\n      generateStars();\n      resizeCanvas(canvasRef.current);\n      step();\n    }\n\n    const cleanup = () => {\n      stars.length = 0;\n      if (canvasRef.current) {\n        const canvas = canvasRef.current;\n        canvas.removeEventListener('mousemove', handleMouseMove);\n        canvas.removeEventListener('touchmove', handleTouchMove);\n        canvas.removeEventListener('touchend', handleTouchLeave);\n        window.removeEventListener('wheel', handleWheel);\n        window.removeEventListener('resize', handleResize);\n        document.removeEventListener('mouseleave', handleMouseLeave);\n      }\n    };\n    return cleanup;\n  }, [context]);\n\n  const themeContext = useContext(ThemeContext);\n\n  return (\n    <canvas\n      id=\"canvas\"\n      ref={canvasRef}\n      style={{\n        backgroundColor: themeContext.colors.black,\n        backgroundImage: getRandomBackground(),\n        opacity: containerOpacity,\n        position: 'fixed',\n        width: '100%',\n        height: '100%'\n      }}\n    />\n  );\n};\n\nexport default Stars;\n"],"sourceRoot":""}