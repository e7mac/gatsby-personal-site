{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["StyledUl","styled","Header","div","Title","h1","props","theme","fontSizes","xLarge","fontWeights","regular","Description","p","mediumLarge","thin","SubHeader","Date","ItemTags","Tag","Link","colors","light","bold","small","darkest","pageQuery","PostTemplate","data","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","featuredImgFluid","frontmatter","featuredImage","childImageSharp","fluid","description","excerpt","keywords","normalVelocity","containerOpacity","addEventListeners","date","tags","sort","map","tag","to","key","style","width","height","className","dangerouslySetInnerHTML","__html","html","fields","slug","rel"],"mappings":"mSAiBMA,EAAWC,YAAO,MAAV,qEAAGA,CAAH,wFASRC,EAASD,IAAOE,IAAV,mEAAGF,CAAH,wBAGNG,EAAQH,IAAOI,GAAV,kEAAGJ,CAAH,oCACI,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,UAC7B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,WAE5CC,EAAcX,IAAOY,EAAV,wEAAGZ,CAAH,yEACF,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,UAAUM,eAC7B,SAAAR,GAAK,OAAIA,EAAMC,MAAMG,YAAYK,QAI5CC,EAAYf,IAAOE,IAAV,sEAAGF,CAAH,mBAGTgB,EAAOhB,IAAOE,IAAV,iEAAGF,CAAH,oEACK,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,UAAUM,eAC7B,SAAAR,GAAK,OAAIA,EAAMC,MAAMG,YAAYK,QAK5CG,EAAWjB,IAAOE,IAAV,qEAAGF,CAAH,qFAQRkB,EAAMlB,YAAOmB,QAAV,gEAAGnB,CAAH,2QAGE,SAAAK,GAAK,OAAIA,EAAMC,MAAMc,OAAOC,SACjB,SAAAhB,GAAK,OAAIA,EAAMC,MAAMc,OAAOC,MAAQ,QACzC,SAAAhB,GAAK,OAAIA,EAAMC,MAAMG,YAAYa,QACnC,SAAAjB,GAAK,OAAIA,EAAMC,MAAMC,UAAUgB,SAUjC,SAAAlB,GAAK,OAAIA,EAAMC,MAAMc,OAAOI,WACjB,SAAAnB,GAAK,OAAIA,EAAMC,MAAMc,OAAOC,SA8FvCI,EAAY,aA4BVC,UAtHuB,SAAC,GAAwB,IAAvBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACtCC,EAAOF,EAAKG,eACZC,EAAYJ,EAAKK,KAAKC,aAAaC,MAClCC,EAAkBP,EAAlBO,SAAUC,EAAQR,EAARQ,KACXC,EAAmBR,EAAKS,YAAYC,cAAcC,gBAAgBC,MACxE,OACE,kBAAC,IAAD,CAAQP,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAOL,EAAKS,YAAYJ,MACxBQ,YAAab,EAAKc,QAClBC,SAAU,CAAC,OAAD,0DASZ,kBAAC,IAAD,CACEC,eAAgB,KAChBC,iBAAkB,GAClBC,mBAAmB,IAErB,kBAAC,IAAD,KACE,iCACE,kBAAC9C,EAAD,KACE,kBAACE,EAAD,KAAQ0B,EAAKS,YAAYJ,OACzB,kBAACvB,EAAD,KAAckB,EAAKS,YAAYI,aAC/B,kBAAC3B,EAAD,KACE,kBAACC,EAAD,KAAOa,EAAKS,YAAYU,MACxB,kBAAC/B,EAAD,KACGY,EAAKS,YAAYW,MAChBpB,EAAKS,YAAYW,KAAKC,OAAOC,KAAI,SAAAC,GAAG,OAClC,kBAAClC,EAAD,CAAKmC,GAAE,SAAWD,EAAX,IAAmBE,IAAKF,GAC5BA,QAKX,yBAAKG,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAClC,kBAAC,IAAD,CAAKhB,MAAOJ,MAIhB,yBAAKqB,UAAS,gBACZ,yBAAKC,wBAAyB,CAACC,OAAQ/B,EAAKgC,QAC5C,kBAAC9D,EAAD,KACGoC,GACC,4BACE,kBAAC,OAAD,CAAMkB,GAAIlB,EAAS2B,OAAOC,KAAMC,IAAI,QAApC,KACK7B,EAASG,YAAYJ,QAI7BE,GACC,4BACE,kBAAC,OAAD,CAAMiB,GAAIjB,EAAK0B,OAAOC,KAAMC,IAAI,QAC7B5B,EAAKE,YAAYJ,MADpB","file":"component---src-templates-post-tsx-92c70d5bb5e8feee57fa.js","sourcesContent":["import React from 'react';\nimport {Link, graphql} from 'gatsby';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport Layout from '../components/Layout';\nimport Head from '../components/Head';\nimport Stars from '../components/Stars';\nimport Content from '../components/Content';\n\ninterface Props {\n  readonly data: PageQueryData;\n  readonly pageContext: {\n    previous?: any;\n    next?: any;\n  };\n}\n\nconst StyledUl = styled('ul')`\n  list-style-type: none;\n\n  li::before {\n    content: '' !important;\n    padding-right: 0 !important;\n  }\n`;\n\nconst Header = styled.div`\n  padding-left: 1rem;\n`;\nconst Title = styled.h1`\n  font-size: ${props => props.theme.fontSizes.xLarge};\n  font-weight: ${props => props.theme.fontWeights.regular};\n`;\nconst Description = styled.p`\n  font-size: ${props => props.theme.fontSizes.mediumLarge};\n  font-weight: ${props => props.theme.fontWeights.thin};\n  letter-spacing: 0.1rem;\n  padding: 1rem 0;\n`;\nconst SubHeader = styled.div`\n  display: flex;\n`;\nconst Date = styled.div`\n  font-size: ${props => props.theme.fontSizes.mediumLarge};\n  font-weight: ${props => props.theme.fontWeights.thin};\n  padding: 1rem 0 2rem 0;\n  width: 20%;\n`;\n\nconst ItemTags = styled.div`\n  padding: 0.6rem 0 0 0;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -0.3rem;\n  width: 80%;\n`;\n\nconst Tag = styled(Link)`\n  padding: 0.4rem 0.6rem;\n  height: 1.5rem;\n  color: ${props => props.theme.colors.light};\n  background-color: ${props => props.theme.colors.light + '40'};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.small};\n  border-radius: 3rem;\n  margin: 0.2rem;\n  text-decoration: none;\n  border-bottom: 0;\n  white-space: nowrap;\n  line-height: 1;\n  transition: 0.2s ease;\n\n  &:hover {\n    color: ${props => props.theme.colors.darkest};\n    background-color: ${props => props.theme.colors.light};\n  }\n`;\n\nconst PostTemplate: React.FC<Props> = ({data, pageContext}) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const {previous, next} = pageContext;\n  const featuredImgFluid = post.frontmatter.featuredImage.childImageSharp.fluid;\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title={post.frontmatter.title}\n        description={post.excerpt}\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <Stars\n        normalVelocity={0.0001}\n        containerOpacity={0.3}\n        addEventListeners={false}\n      />\n      <Content>\n        <article>\n          <Header>\n            <Title>{post.frontmatter.title}</Title>\n            <Description>{post.frontmatter.description}</Description>\n            <SubHeader>\n              <Date>{post.frontmatter.date}</Date>\n              <ItemTags>\n                {post.frontmatter.tags &&\n                  post.frontmatter.tags.sort().map(tag => (\n                    <Tag to={`/tags/${tag}/`} key={tag}>\n                      {tag}\n                    </Tag>\n                  ))}\n              </ItemTags>\n            </SubHeader>\n            <div style={{width: '100%', height: 'auto'}}>\n              <Img fluid={featuredImgFluid} />\n            </div>\n          </Header>\n\n          <div className={`page-content`}>\n            <div dangerouslySetInnerHTML={{__html: post.html}} />\n            <StyledUl>\n              {previous && (\n                <li>\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                </li>\n              )}\n              {next && (\n                <li>\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                </li>\n              )}\n            </StyledUl>\n          </div>\n        </article>\n      </Content>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  markdownRemark: {\n    id?: string;\n    excerpt?: string;\n    html: string;\n    frontmatter: {\n      title: string;\n      description: string;\n      date: string;\n      tags: [string];\n      featuredImage: any;\n    };\n  };\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      excerpt(pruneLength: 2500)\n      html\n      frontmatter {\n        title\n        description\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n"],"sourceRoot":""}