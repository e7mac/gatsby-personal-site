{"version":3,"sources":["webpack:///./src/components/Content.tsx","webpack:///./src/pages/tags.tsx"],"names":["Wrapper","styled","div","props","fullHeight","theme","media","max","lg","md","sm","BottomHeight","Content","children","pageQuery","Tags","data","siteTitle","site","siteMetadata","title","group","allMarkdownRemark","sort","a","b","totalCount","keywords","normalVelocity","containerOpacity","addEventListeners","map","tag","key","fieldValue","to"],"mappings":"0jBAOO,IAAMA,EAAUC,IAAOC,IAAV,uEAAGD,CAAH,kJASR,SAAAE,GAAK,OAAKA,EAAMC,WAAa,OAAS,UAE9C,SAAAD,GAAK,OAAIA,EAAME,MAAMC,MAAMC,IAAIC,GAA1B,QAML,SAAAL,GAAK,OAAIA,EAAME,MAAMC,MAAMC,IAAIE,GAA1B,QAML,SAAAN,GAAK,OAAIA,EAAME,MAAMC,MAAMC,IAAIG,GAA1B,QAMHC,EAAeV,IAAOC,IAAV,4EAAGD,CAAH,mBAgBHW,IAPyB,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,IAAYT,kBAAZ,gBACtC,kBAACJ,EAAD,CAASI,WAAYA,GAClBS,EACD,kBAACF,EAAD,S,kCChDJ,sIA2EaG,EAAY,aAgBVC,UA9Ee,SAAC,GAAW,IAAVC,EAAU,EAAVA,KACxBC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EACJL,EAAKM,mBACLN,EAAKM,kBAAkBD,MAAME,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,WAAaF,EAAEE,cAE/D,OACE,kBAAC,IAAD,CAAQN,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,WACNO,SAAU,CAAC,OAAD,0DASZ,kBAAC,IAAD,CACEC,eAAgB,KAChBC,iBAAkB,GAClBC,mBAAmB,IAErB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,6BAEF,iCACE,kBAAC,IAAD,KACGT,GACCA,EAAMU,KACJ,SAAAC,GAAG,OACDA,GACE,kBAAC,IAAD,CAAKC,IAAKD,EAAIE,WAAYC,GAAE,SAAWH,EAAIE,WAAf,KACzBF,EAAIE,WADP,MAEE,+BAAQF,EAAIN","file":"component---src-pages-tags-tsx-fc7113c2d97a7b08a7d9.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ntype WrapperProps = {\n  fullHeight: boolean;\n};\n\nexport const Wrapper = styled.div<WrapperProps>`\n  max-width: 68rem;\n  width: calc(100% - 9.25rem * 2);\n  margin: 11rem auto 5rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: ${props => (props.fullHeight ? '100%' : 'auto')};\n\n  ${props => props.theme.media.max.lg`\n    width: 1.45rem;\n    margin: 8rem auto 3rem;\n    width: calc(100% - 11rem * 2);\n  `}\n\n  ${props => props.theme.media.max.md`\n    width: 100%;\n    margin: 4rem auto 0;\n    padding: 0 3rem 6rem;\n  `}\n  \n  ${props => props.theme.media.max.sm`\n    margin: 2rem auto 0;\n    padding: 0 2rem 6rem;\n  `}\n`;\n\nconst BottomHeight = styled.div`\n  height: 10rem;\n`;\n\ntype ContentProps = {\n  readonly children: React.ReactNode;\n  readonly fullHeight?: boolean;\n};\n\nconst Content: React.FC<ContentProps> = ({children, fullHeight = true}) => (\n  <Wrapper fullHeight={fullHeight}>\n    {children}\n    <BottomHeight />\n  </Wrapper>\n);\n\nexport default Content;\n","import React from 'react';\nimport {graphql} from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport Head from '../components/Head';\nimport Stars from '../components/Stars';\nimport Content from '../components/Content';\nimport {Description, Header, ItemTags, Tag, Title} from '../styles';\n\ninterface Props {\n  readonly data: PageQueryData;\n}\n\nconst Tags: React.FC<Props> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const group =\n    data.allMarkdownRemark &&\n    data.allMarkdownRemark.group.sort((a, b) => b.totalCount - a.totalCount);\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title=\"All tags\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <Stars\n        normalVelocity={0.0001}\n        containerOpacity={0.3}\n        addEventListeners={false}\n      />\n      <Content>\n        <Header>\n          <Title>All tags</Title>\n          <Description>Tags from the works</Description>\n        </Header>\n        <article>\n          <ItemTags>\n            {group &&\n              group.map(\n                tag =>\n                  tag && (\n                    <Tag key={tag.fieldValue} to={`/tags/${tag.fieldValue}/`}>\n                      {tag.fieldValue} -&nbsp;\n                      <small>{tag.totalCount}</small>\n                    </Tag>\n                  )\n              )}\n          </ItemTags>\n        </article>\n      </Content>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    group: {\n      fieldValue: string;\n      totalCount: number;\n    }[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default Tags;\n"],"sourceRoot":""}