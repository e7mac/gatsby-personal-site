{"version":3,"sources":["webpack:///./src/components/Content.tsx","webpack:///./src/pages/blog.tsx"],"names":["ContentContainer","styled","div","props","theme","media","lg","md","sm","Content","children","pageQuery","Blog","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","Layout","Head","keywords","className","map","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"6oBAGO,IAAMA,E,UAAmBC,EAAOC,IAAV,gFAAGD,CAAH,gJAUxB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,GAAtB,QAMN,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAME,GAAtB,QAML,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,MAAMG,GAAtB,QAcMC,EAJyB,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACtC,kBAACV,EAAD,KAAmBU,ICqCRC,EAAY,aA2BVC,UA1FmB,SAAC,GAAW,IAAVC,EAAU,EAAVA,KAC5BC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAACC,EAAA,EAAD,CAAQJ,MAAOH,GACb,kBAACQ,EAAA,EAAD,CACEL,MAAM,OACNM,SAAU,CAAC,OAAD,0DAWZ,kBAAC,EAAD,KACE,iCACE,yBAAKC,UAAS,gBACXN,EAAMO,KAAI,YAAY,IAAVC,EAAU,EAAVA,KACLT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,4BACE,kBAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,MAAOZ,IAE/B,+BAAQS,EAAKC,YAAYK,MACzB,uBAAGC,wBAAyB,CAACC,OAAQR,EAAKS","file":"component---src-pages-blog-tsx-006200d0041d746f9eb7.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const ContentContainer = styled.div`\n  max-width: 68rem;\n  width: calc(100% - 9.25rem * 2);\n  margin: 11rem auto 5rem;\n     position: fixed;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n   ${props => props.theme.media.lg`\n    width: 1.45rem;\n    margin: 8rem auto 3rem;\n    width: calc(100% - 11rem * 2);\n  `}\n  \n  ${props => props.theme.media.md`\n    width: 100%;\n    margin: 4rem auto 0;\n    padding: 0 3rem 6rem;\n  `}\n  \n  ${props => props.theme.media.sm`\n    margin: 2rem auto 0;\n    padding: 0 2rem 6rem;\n  `}\n`;\n\ntype ContentProps = {\n  readonly children: React.ReactNode;\n};\n\nconst Content: React.FC<ContentProps> = ({children}) => (\n  <ContentContainer>{children}</ContentContainer>\n);\n\nexport default Content;\n","import React from 'react';\nimport {Link, graphql} from 'gatsby';\nimport Layout from '../components/Layout';\nimport Head from '../components/Head';\nimport Content from '../components/Content';\n\ninterface BlogProps {\n  readonly data: PageQueryData;\n}\n\nconst Blog: React.FC<BlogProps> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title=\"Blog\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      {/*todo: stars param to stop them*/}\n      {/*<Stars normalVelocity={0.0001} addEventListeners={false}/>*/}\n      <Content>\n        <article>\n          <div className={`page-content`}>\n            {posts.map(({node}) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              return (\n                <div key={node.fields.slug}>\n                  <h3>\n                    <Link to={node.fields.slug}>{title}</Link>\n                  </h3>\n                  <small>{node.frontmatter.date}</small>\n                  <p dangerouslySetInnerHTML={{__html: node.excerpt}} />\n                </div>\n              );\n            })}\n          </div>\n        </article>\n      </Content>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string;\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          date: string;\n          title: string;\n        };\n      };\n    }[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n"],"sourceRoot":""}