{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./node_modules/core-js/modules/es6.string.small.js","webpack:///./src/components/Content.tsx","webpack:///./src/utils/misc.tsx","webpack:///./src/utils/styles.tsx","webpack:///./src/components/Stars.tsx","webpack:///./src/components/postsList/PostsListItem.tsx","webpack:///./src/components/postsList/PostsList.tsx"],"names":["pageQuery","Blog","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","normalVelocity","containerOpacity","addEventListeners","createHTML","this","ContentContainer","styled","div","props","theme","media","lg","md","sm","Content","children","getRandomNumber","max","min","Math","floor","random","getRandomBackground","background","i","push","toString","slice","join","Stars","StarsConfig","windowWidth","windowHeight","starsNumber","window","innerWidth","innerHeight","scale","stars","cursorInsideCanvas","pointer","x","y","pointerActive","evCache","prevPointersDistance","velocity","tx","ty","z","movePointer","userPositionX","userPositionY","ox","oy","resizeCanvas","canvas","devicePixelRatio","width","height","forEach","star","accelerate","acceleration","console","log","canvasRef","React","useRef","useState","context","setContext","useEffect","handleMouseMove","event","clientX","clientY","handleTouchMove","touches","preventDefault","handleMouseLeave","handleTouchLeave","handleResize","current","handleWheel","deltaY","handlePointerUp","filter","evCached","pointerId","removeEvent","length","renderCtx","getContext","addEventListener","currentPointersDistance","abs","document","update","direction","vx","vy","recycleStar","generateStars","step","clearRect","beginPath","lineCap","lineWidth","strokeStyle","moveTo","tailX","tailY","lineTo","stroke","requestAnimationFrame","removeEventListener","themeContext","useContext","ThemeContext","id","ref","style","backgroundColor","colors","black","backgroundImage","opacity","position","ItemContainer","article","light","ItemHeader","ItemTitle","h3","lightest","fontSizes","medium","fontWeights","bold","ItemTags","Tag","Link","small","darkest","ItemDate","mediumLight","normal","regular","PostsListItem","node","frontmatter","fields","slug","tags","to","sort","map","tag","key","date","PostsListContainer","section","PostsList"],"mappings":"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","file":"component---src-pages-blog-tsx-66b8b4bd911a75c7cee4.js","sourcesContent":["import React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/Layout';\nimport Head from '../components/Head';\nimport Content from '../components/Content';\nimport Stars from '../components/Stars';\nimport {PostsList} from '../components/postsList';\n\ninterface BlogProps {\n  readonly data: PageQueryData;\n  readonly location: Location;\n  readonly navigate: void;\n}\n\ninterface Post {\n  node: {\n    id: string;\n    excerpt: string;\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      date: string;\n      title: string;\n      thumbnail: string;\n      tags: string[];\n    };\n  };\n}\n\nconst Blog: React.FC<BlogProps> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts: Post[] = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title=\"Blog\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <Stars\n        normalVelocity={0.0001}\n        containerOpacity={0.3}\n        addEventListeners={false}\n      />\n      <Content>\n        <h1>Blog</h1>\n        <h4>Things I do and write about to be useful to others</h4>\n        {/*<Search*/}\n        {/*  posts={simplifiedPosts}*/}\n        {/*  location={location}*/}\n        {/*  navigate={navigate}*/}\n        {/*/>*/}\n        <p>Tags</p>\n        {/*<Search/>*/}\n        {/*<Tags/>  redirect to tags with the tag selected*/}\n        <PostsList posts={posts} />\n      </Content>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        id: string;\n        excerpt: string;\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          date: string;\n          title: string;\n          thumbnail: string;\n          tags: string[];\n        };\n      };\n    }[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY\")\n            title\n            thumbnail\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const ContentContainer = styled.div`\n  max-width: 68rem;\n  width: calc(100% - 9.25rem * 2);\n  margin: 11rem auto 5rem;\n  position: absolute;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  \n   ${props => props.theme.media.lg`\n    width: 1.45rem;\n    margin: 8rem auto 3rem;\n    width: calc(100% - 11rem * 2);\n  `}\n  \n  ${props => props.theme.media.md`\n    width: 100%;\n    margin: 4rem auto 0;\n    padding: 0 3rem 6rem;\n  `}\n  \n  ${props => props.theme.media.sm`\n    margin: 2rem auto 0;\n    padding: 0 2rem 6rem;\n  `}\n`;\n\ntype ContentProps = {\n  readonly children: React.ReactNode;\n};\n\nconst Content: React.FC<ContentProps> = ({children}) => (\n  <ContentContainer>{children}</ContentContainer>\n);\n\nexport default Content;\n","export const getRandomNumber = (max = 10, min = 1) =>\n  Math.floor(Math.random() * max) + min;\n","import {getRandomNumber} from './misc';\n\nexport const getRandomColor = () =>\n  '#' + ('00000' + ((Math.random() * (1 << 24)) | 0).toString(16)).slice(-6);\n\nexport const getRandomBackground = () => {\n  const background = [];\n  for (let i = 0; i < getRandomNumber(); i++) {\n    background.push(`\n      radial-gradient(\n        circle at ${getRandomNumber(100)}% ${getRandomNumber(100)}%,\n        ${getRandomColor() + '0d'},\n        transparent ${getRandomNumber(100, 60)}%\n      )\n  `);\n  }\n  return background.join(',');\n};\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\nimport {getRandomBackground} from '../utils';\n\ntype Coordinates = {\n  x: number | null;\n  y: number | null;\n};\n\ntype Star = {\n  x: number;\n  y: number;\n  z: number;\n};\n\ninterface StarsProps {\n  readonly normalVelocity?: number;\n  readonly containerOpacity?: number;\n  readonly addEventListeners?: boolean;\n}\n\nconst Stars: React.FC<StarsProps> = (StarsConfig: StarsProps) => {\n  const {containerOpacity = 1} = StarsConfig;\n  const starsNumber =\n    typeof window !== 'undefined' &&\n    (window.innerWidth + window.innerHeight) / 8;\n  const starSize = 3;\n  const starMinScale = 0.2;\n  const overflowThreshold = 50;\n\n  let scale = 1; // device/pixel ratio\n  let windowWidth: number;\n  let windowHeight: number;\n\n  const stars: Star[] = [];\n  let cursorInsideCanvas = false;\n  let pointer: Coordinates = {x: null, y: null};\n  let pointerActive = true;\n  let evCache: PointerEvent[] = [];\n  let prevPointersDistance = -1;\n\n  const {normalVelocity = 0.0005} = StarsConfig;\n  const velocity = {x: 0, y: 0, tx: 0, ty: 0, z: normalVelocity};\n  const {addEventListeners = true} = StarsConfig;\n\n  const generateStars = () => {\n    for (let i = 0; i < starsNumber; i++) {\n      stars.push({\n        x: 0,\n        y: 0,\n        z: starMinScale + Math.random() * (1 - starMinScale)\n      });\n    }\n  };\n\n  const recycleStar = (star: Star) => {\n    let direction = 'z';\n\n    const vx = Math.abs(velocity.x),\n      vy = Math.abs(velocity.y);\n\n    if (vx > 1 || vy > 1) {\n      let axis;\n\n      if (vx > vy) {\n        axis = Math.random() < vx / (vx + vy) ? 'h' : 'v';\n      } else {\n        axis = Math.random() < vy / (vx + vy) ? 'v' : 'h';\n      }\n\n      if (axis === 'h') {\n        direction = velocity.x > 0 ? 'l' : 'r';\n      } else {\n        direction = velocity.y > 0 ? 't' : 'b';\n      }\n    }\n\n    star.z = starMinScale + Math.random() * (1 - starMinScale);\n\n    if (direction === 'z') {\n      star.x = Math.random() * windowWidth;\n      star.y = Math.random() * windowHeight;\n      star.z = 0.1;\n    } else if (direction === 'l') {\n      star.x = -overflowThreshold;\n      star.y = windowHeight * Math.random();\n    } else if (direction === 'r') {\n      star.x = windowWidth + overflowThreshold;\n      star.y = windowHeight * Math.random();\n    } else if (direction === 't') {\n      star.x = windowWidth * Math.random();\n      star.y = -overflowThreshold;\n    } else if (direction === 'b') {\n      star.x = windowWidth * Math.random();\n      star.y = windowHeight + overflowThreshold;\n    }\n  };\n\n  const placeStars = () => {\n    stars.forEach((star: Star) => {\n      star.x = Math.random() * windowWidth;\n      star.y = Math.random() * windowHeight;\n    });\n  };\n\n  const movePointer = (userPositionX: number, userPositionY: number) => {\n    if (!pointerActive) return;\n    if (typeof pointer.x === 'number' && typeof pointer.y === 'number') {\n      const ox = userPositionX - pointer.x,\n        oy = userPositionY - pointer.y;\n\n      velocity.tx =\n        velocity.tx - (ox / 8) * scale * (cursorInsideCanvas ? 1 : -1);\n      velocity.ty =\n        velocity.ty - (oy / 8) * scale * (cursorInsideCanvas ? 1 : -1);\n    }\n\n    pointer = {x: userPositionX, y: userPositionY};\n  };\n\n  const resizeCanvas = (canvas: any) => {\n    scale = window.devicePixelRatio || 1;\n\n    windowWidth = window.innerWidth * scale;\n    windowHeight = window.innerHeight * scale;\n\n    canvas.width = windowWidth;\n    canvas.height = windowHeight;\n\n    placeStars();\n  };\n\n  const accelerate = (acceleration: boolean) => {\n    console.log('accelerates');\n\n    pointer = {x: null, y: null};\n    pointerActive = !acceleration;\n    velocity.z = acceleration ? 0.1 : normalVelocity;\n  };\n\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(\n    null\n  );\n\n  React.useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      cursorInsideCanvas = true;\n      movePointer(event.clientX, event.clientY);\n    };\n\n    const handleTouchMove = (event: TouchEvent) => {\n      cursorInsideCanvas = true;\n      movePointer(event.touches[0].clientX, event.touches[0].clientY);\n      event.preventDefault();\n    };\n\n    const handleMouseLeave = () => {\n      cursorInsideCanvas = false;\n      pointer = {x: null, y: null};\n    };\n\n    const handleTouchLeave = () => {\n      cursorInsideCanvas = false;\n      pointer = {x: null, y: null};\n    };\n\n    const handleResize = () => {\n      resizeCanvas(canvasRef.current);\n    };\n\n    const handleWheel = (event: WheelEvent) => {\n      accelerate(event.deltaY < 0);\n    };\n\n    const handlePointerDown = (event: PointerEvent) => {\n      evCache.push(event);\n    };\n\n    const handlePointerMove = (event: PointerEvent) => {\n      for (let i = 0; i < evCache.length; i++) {\n        if (event.pointerId === evCache[i].pointerId) {\n          evCache[i] = event;\n          break;\n        }\n      }\n      if (evCache.length == 2) {\n        const currentPointersDistance = Math.abs(\n          evCache[0].clientX - evCache[1].clientX\n        );\n        accelerate(\n          prevPointersDistance > 0 &&\n            currentPointersDistance > prevPointersDistance\n        );\n        prevPointersDistance = currentPointersDistance;\n      }\n    };\n\n    const removeEvent = (event: PointerEvent) => {\n      evCache = evCache.filter(\n        evCached => evCached.pointerId !== event.pointerId\n      );\n    };\n\n    const handlePointerUp = (event: PointerEvent) => {\n      removeEvent(event);\n      if (evCache.length < 2) prevPointersDistance = -1;\n    };\n\n    if (canvasRef.current) {\n      const renderCtx = canvasRef.current.getContext('2d');\n\n      if (renderCtx) {\n        const canvas = canvasRef.current;\n        if (addEventListeners) {\n          canvas.addEventListener('pointerdown', handlePointerDown);\n          canvas.addEventListener('pointermove', handlePointerMove);\n          canvas.addEventListener('pointerup', handlePointerUp);\n          canvas.addEventListener('pointercancel', handlePointerUp);\n          canvas.addEventListener('pointerout', handlePointerUp);\n          canvas.addEventListener('pointerleave', handlePointerUp);\n\n          window.addEventListener('wheel', handleWheel);\n          window.addEventListener('resize', handleResize);\n          canvas.addEventListener('mousemove', handleMouseMove);\n          canvas.addEventListener('touchmove', handleTouchMove);\n          canvas.addEventListener('touchend', handleTouchLeave);\n          document.addEventListener('mouseleave', handleMouseLeave);\n        }\n        setContext(renderCtx);\n      }\n    }\n\n    if (context) {\n      const renderStars = () => {\n        stars.forEach(star => {\n          context.beginPath();\n          context.lineCap = 'round';\n          context.lineWidth = starSize * star.z * scale;\n          context.strokeStyle =\n            'rgba(255,255,255,' + (0.5 + 0.5 * Math.random()) + ')';\n\n          context.beginPath();\n          context.moveTo(star.x, star.y);\n\n          let tailX = velocity.x * 2;\n          let tailY = velocity.y * 2;\n\n          // stroke() wont work on an invisible line\n          if (Math.abs(tailX) < 0.1) tailX = 0.5;\n          if (Math.abs(tailY) < 0.1) tailY = 0.5;\n\n          context.lineTo(star.x + tailX, star.y + tailY);\n          context.stroke();\n        });\n      };\n\n      const update = () => {\n        velocity.tx *= 0.96;\n        velocity.ty *= 0.96;\n\n        velocity.x += (velocity.tx - velocity.x) * 0.8;\n        velocity.y += (velocity.ty - velocity.y) * 0.8;\n\n        stars.forEach(star => {\n          star.x +=\n            velocity.x * star.z +\n            (star.x - windowWidth / 2) * velocity.z * star.z;\n          star.y +=\n            velocity.y * star.z +\n            (star.y - windowHeight / 2) * velocity.z * star.z;\n          star.z += velocity.z;\n\n          // recycle when out of bounds\n          if (\n            star.x < -overflowThreshold ||\n            star.x > windowWidth + overflowThreshold ||\n            star.y < -overflowThreshold ||\n            star.y > windowHeight + overflowThreshold\n          ) {\n            recycleStar(star);\n          }\n        });\n      };\n\n      const step = () => {\n        context.clearRect(0, 0, windowWidth, windowHeight);\n        update();\n        renderStars();\n        requestAnimationFrame(step);\n      };\n\n      generateStars();\n      resizeCanvas(canvasRef.current);\n      step();\n    }\n\n    const cleanup = () => {\n      stars.length = 0;\n      if (canvasRef.current) {\n        const canvas = canvasRef.current;\n        canvas.removeEventListener('mousemove', handleMouseMove);\n        canvas.removeEventListener('touchmove', handleTouchMove);\n        canvas.removeEventListener('touchend', handleTouchLeave);\n        window.removeEventListener('wheel', handleWheel);\n        window.removeEventListener('resize', handleResize);\n        document.removeEventListener('mouseleave', handleMouseLeave);\n      }\n    };\n    return cleanup;\n  }, [context]);\n\n  const themeContext = useContext(ThemeContext);\n\n  return (\n    <canvas\n      id=\"canvas\"\n      ref={canvasRef}\n      style={{\n        backgroundColor: themeContext.colors.black,\n        backgroundImage: getRandomBackground(),\n        opacity: containerOpacity,\n        position: 'fixed',\n        width: '100%',\n        height: '100%'\n      }}\n    />\n  );\n};\n\nexport default Stars;\n","import React from 'react';\nimport {Link} from 'gatsby';\nimport styled from 'styled-components';\n\n\nconst ItemContainer = styled.article`\n  transition: 0.2s ease;\n  padding: 1rem;\n  border-radius: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  position: relative;\n\n  ${props => props.theme.media.md`\n     flex-direction:  column-reverse;\n  `}\n\n  &:hover {\n    background-color: ${props => props.theme.colors.light + '40'};\n  }\n`;\n\nconst ItemHeader = styled.div`\n  max-width: 70%;\n  ${props => props.theme.media.md`\n    max-width: 100%;\n  `}\n`;\n\nconst ItemTitle = styled.h3`\n  color: ${props => props.theme.colors.lightest};\n  font-size: ${props => props.theme.fontSizes.medium};\n  font-weight: ${props => props.theme.fontWeights.bold};\n`;\nconst ItemTags = styled.div`\n  padding: 0.4rem 0;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -0.3rem;\n`;\n\nconst Tag = styled(Link)`\n  padding: 0.4rem 0.6rem;\n  color: ${props => props.theme.colors.light};\n  background-color: ${props => props.theme.colors.light + '40'};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.small};\n  border-radius: 3rem;\n  margin: 0.2rem;\n  text-decoration: none;\n  border-bottom: 0;\n  white-space: nowrap;\n  line-height: 1;\n  transition: 0.2s ease;\n\n  &:hover {\n    color: ${props => props.theme.colors.darkest};\n    background-color: ${props => props.theme.colors.light};\n  }\n`;\nconst ItemDate = styled.div`\n  max-width: 30%;\n  padding-bottom: 0.4rem;\n  color: ${props => props.theme.colors.mediumLight};\n  font-size: ${props => props.theme.fontSizes.normal};\n  font-weight: ${props => props.theme.fontWeights.regular};\n\n  ${props => props.theme.media.md`\n    max-width: 100%;\n  `}\n`;\n\ninterface Node {\n  excerpt: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    date: string;\n    title: string;\n    tags: string[];\n  };\n}\n\ninterface PostsListItemProps {\n  readonly node: Node;\n}\n\nexport const PostsListItem: React.FC<PostsListItemProps> = ({node}) => {\n  const title = node.frontmatter.title || node.fields.slug;\n  const tags = node.frontmatter.tags;\n\n  return (\n    <Link to={node.fields.slug}>\n      <ItemContainer >\n        <ItemHeader>\n          <ItemTitle>{title}</ItemTitle>\n          <ItemTags>\n            {tags &&\n            tags.sort().map(tag => (\n              <Tag to={`/tags/${tag}/`} key={tag}>\n                {tag}\n              </Tag>\n            ))}\n          </ItemTags>\n        </ItemHeader>\n        <ItemDate>{node.frontmatter.date}</ItemDate>\n      </ItemContainer>\n    </Link>\n\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport {PostsListItem} from './PostsListItem';\n\nconst PostsListContainer = styled.section`\n  margin: 1.5rem auto 0;\n`;\n\ninterface Post {\n  node: {\n    excerpt: string;\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      date: string;\n      title: string;\n      tags: string[];\n    };\n  };\n}\n\ninterface PostsListProps {\n  readonly posts: Post[];\n}\n\nexport const PostsList: React.FC<PostsListProps> = ({posts}) => {\n  return (\n    <PostsListContainer>\n      {posts.map(({node}) => (\n        <PostsListItem key={node.fields.slug} node={node} />\n      ))}\n    </PostsListContainer>\n  );\n};\n"],"sourceRoot":""}