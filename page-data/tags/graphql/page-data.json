{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/graphql/","result":{"data":{"site":{"siteMetadata":{"title":"ramonmorcillo.com"}},"allMarkdownRemark":{"totalCount":1,"edges":[{"node":{"excerpt":"Getting started with GraphQL and Node.js The main purpose of this server-client Node.js project is to help other people understand how GraphQL exposes the data from the Server and the Client fetches it. I have tried to make it as simple as possible- if you want to dive into the code of the project you can find it here. Now, straight to the point: GraphQL is a query language for APIs developed and open-sourced by Facebook to speed up the request process. While REST has been a popular way to expose data from a server, instead of having multiple endpoints that return fixed data structures, GraphQL just has a single endpoint and it is the client‚Äôs job to specify what data it needs from it. Table of Contents Getting started Define the Schema Add Resolver function Set up the Server Set up the Client Fetching data from the server Displaying the data Conclusion Useful resources Docs üìö Learn üìù Tools üîß IDEs üíª Extras üçç Getting started The first step is to download and install Node.js in case you haven‚Äôt already. Once you have it installed let‚Äôs begin with the directory structure. The project will be composed of two directories, one for the Client and another for the Server. I have chosen to keep both inside the project root directory but then you can split it into two separate projects or any way you want. Now we will initialize the project in the server directory. Change the location to the server folder in your terminal and run  to fill the project info and generate the package.json file. Or  which tells the generator to use the defaults (instead of asking questions and simply generate an empty npm project without going through an interactive process). The next step will be to install GraphQL.js and Apollo Server to our server. GraphQL.js will provide two important capabilities: Building a type schema, which we will do in the next step. Serving queries against that type schema. To install it just run . I am assuming you are using a version of NPM equal or higher than 5.0.0 so you do not need to add  when installing a dependency to be saved in the package.json Apollo Server, on the other hand, will help us to implement the GraphQL functionalities. It is part of the Apollo Data Graph Platform. Apollo is a platform for building a data graph, a communication layer that seamlessly connects your application clients (such as React and iOS apps) to your back-end services. Is an implementation of GraphQL designed for the needs of product engineering teams building‚Ä¶","fields":{"slug":"/graphql-hello-world-server/"},"frontmatter":{"date":"2020-04-14","title":"Getting started with GraphQL and Node.js"}}}]}},"pageContext":{"tag":"graphql"}}}