{"version":3,"sources":["webpack:///./src/pages/blog.tsx"],"names":["pageQuery","Blog","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","normalVelocity","containerOpacity","addEventListeners"],"mappings":"6FAAA,kJA4FaA,EAAY,YAoCVC,UAnGmB,SAAC,GAAW,IAAVC,EAAU,EAAVA,KAC5BC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAgBL,EAAKM,kBAAkBC,MAG7C,OACE,kBAAC,IAAD,CAAQH,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,OACNI,SAAU,CAAC,OAAD,0DASZ,kBAAC,IAAD,CACEC,eAAgB,KAChBC,iBAAkB,GAClBC,mBAAmB,IAErB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,aACA,kBAAC,IAAD,6BAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWN,MAAOA","file":"component---src-pages-blog-tsx-958f882a4e68bf416365.js","sourcesContent":["import React from 'react';\nimport {graphql} from 'gatsby';\nimport Head from '../components/Head';\nimport Layout from '../components/Layout';\nimport Stars from '../components/Stars';\nimport Content from '../components/Content';\nimport {PostsList} from '../components/postsList';\nimport {Header, Title, Description, Section, SectionBody} from '../styles';\n\ninterface BlogProps {\n  readonly data: PageQueryData;\n}\n\ninterface Post {\n  node: {\n    id: string;\n    excerpt: string;\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      date: string;\n      title: string;\n      tags: string[];\n      featuredImage: any;\n    };\n  };\n}\n\nconst Blog: React.FC<BlogProps> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts: Post[] = data.allMarkdownRemark.edges;\n  // const tags =[... new Set([].concat(...posts.map(post => post.node.frontmatter.tags)))]\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title=\"Blog\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <Stars\n        normalVelocity={0.0001}\n        containerOpacity={0.3}\n        addEventListeners={false}\n      />\n      <Content>\n        <Header>\n          <Title>Blog</Title>\n          <Description>Stuff I write about</Description>\n        </Header>\n        <Section>\n          <SectionBody>\n            <PostsList posts={posts} />\n          </SectionBody>\n        </Section>\n      </Content>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        id: string;\n        excerpt: string;\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          date: string;\n          title: string;\n          tags: string[];\n          featuredImage: any;\n        };\n      };\n    }[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n"],"sourceRoot":""}