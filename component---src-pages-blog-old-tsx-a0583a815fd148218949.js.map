{"version":3,"sources":["webpack:///./src/components/Bio.tsx","webpack:///./src/pages/blog-old.tsx"],"names":["Bio","query","render","data","description","site","siteMetadata","pageQuery","Blog","siteTitle","title","posts","allMarkdownRemark","edges","Layout","Head","keywords","className","map","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"2MA6CeA,EA9BO,kBACpB,kBAAC,cAAD,CACEC,MAAK,YAaLC,OAAQ,SAACC,GAAqD,IACrDC,EAAeD,EAAKE,KAAKC,aAAzBF,YACP,OACE,6BACE,4BAAKA,GACL,+CAEE,mCCiCCG,EAAY,aA2BVC,UAvFmB,SAAC,GAAW,IAAVL,EAAU,EAAVA,KAC5BM,EAAYN,EAAKE,KAAKC,aAAaI,MACnCC,EAAQR,EAAKS,kBAAkBC,MAErC,OACE,kBAACC,EAAA,EAAD,CAAQJ,MAAOD,GACb,kBAACM,EAAA,EAAD,CACEL,MAAM,OACNM,SAAU,CAAC,OAAD,0DASZ,kBAAC,EAAD,MACA,iCACE,yBAAKC,UAAS,gBACXN,EAAMO,KAAI,YAAY,IAAVC,EAAU,EAAVA,KACLT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,4BACE,kBAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,MAAOZ,IAE/B,+BAAQS,EAAKC,YAAYK,MACzB,uBAAGC,wBAAyB,CAACC,OAAQR,EAAKS","file":"component---src-pages-blog-old-tsx-a0583a815fd148218949.js","sourcesContent":["import React from 'react';\nimport {StaticQuery, graphql} from 'gatsby';\n\ntype StaticQueryData = {\n  site: {\n    siteMetadata: {\n      description: string;\n      social: {\n        name: string;\n        socialUrl: string;\n      };\n    };\n  };\n};\n\nconst Bio: React.FC = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            social {\n              name\n              socialUrl\n            }\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryData): React.ReactElement | null => {\n      const {description} = data.site.siteMetadata;\n      return (\n        <div>\n          <h1>{description}</h1>\n          <p>\n            By Ram√≥n Morcillo\n            <br />\n          </p>\n        </div>\n      );\n    }}\n  />\n);\n\nexport default Bio;\n","import React from 'react';\nimport {Link, graphql} from 'gatsby';\nimport Head from '../components/Head';\nimport Layout from '../components/Layout';\nimport Bio from '../components/Bio';\n\ninterface BlogProps {\n  readonly data: PageQueryData;\n}\n\nconst Blog: React.FC<BlogProps> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title=\"Blog\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <Bio />\n      <article>\n        <div className={`page-content`}>\n          {posts.map(({node}) => {\n            const title = node.frontmatter.title || node.fields.slug;\n            return (\n              <div key={node.fields.slug}>\n                <h3>\n                  <Link to={node.fields.slug}>{title}</Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{__html: node.excerpt}} />\n              </div>\n            );\n          })}\n        </div>\n      </article>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string;\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          date: string;\n          title: string;\n        };\n      };\n    }[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n"],"sourceRoot":""}