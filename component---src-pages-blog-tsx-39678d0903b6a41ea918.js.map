{"version":3,"sources":["webpack:///./src/components/Content.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/utils/index.tsx","webpack:///./src/components/Stars.tsx"],"names":["ContentContainer","styled","div","props","theme","media","lg","md","sm","Content","children","pageQuery","Blog","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","Layout","Head","keywords","Stars","className","map","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","excerpt","getRandom","max","min","Math","floor","random","getRandomBackground","background","i","push","toString","slice","join","StarsContainer","colors","black","windowWidth","windowHeight","starsNumber","window","innerWidth","innerHeight","scale","stars","cursorInsideCanvas","pointer","x","y","pointerActive","evCache","prevPointersDistance","velocity","tx","ty","z","movePointer","userPositionX","userPositionY","ox","oy","resizeCanvas","canvas","devicePixelRatio","width","height","forEach","star","accelerate","acceleration","console","log","canvasRef","React","useRef","useState","context","setContext","useEffect","handleMouseMove","event","clientX","clientY","handleTouchMove","touches","preventDefault","handleMouseLeave","handleTouchLeave","handleResize","current","handleWheel","deltaY","handlePointerUp","filter","evCached","pointerId","removeEvent","length","renderCtx","getContext","addEventListener","currentPointersDistance","abs","document","update","direction","vx","vy","recycleStar","generateStars","step","clearRect","beginPath","lineCap","lineWidth","strokeStyle","moveTo","tailX","tailY","lineTo","stroke","requestAnimationFrame","removeEventListener","style","backgroundImage","id","ref","position"],"mappings":"ypBAGO,IAAMA,E,UAAmBC,EAAOC,IAAV,gFAAGD,CAAH,gJAUxB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,GAAtB,QAMN,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAME,GAAtB,QAML,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,MAAMG,GAAtB,QAcMC,EAJyB,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACtC,kBAACV,EAAD,KAAmBU,ICsCRC,EAAY,aA2BVC,UA1FmB,SAAC,GAAW,IAAVC,EAAU,EAAVA,KAC5BC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAACC,EAAA,EAAD,CAAQJ,MAAOH,GACb,kBAACQ,EAAA,EAAD,CACEL,MAAM,OACNM,SAAU,CAAC,OAAD,0DAUZ,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,KACE,iCACE,yBAAKC,UAAS,gBACXP,EAAMQ,KAAI,YAAY,IAAVC,EAAU,EAAVA,KACLV,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,4BACE,kBAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,MAAOb,IAE/B,+BAAQU,EAAKC,YAAYK,MACzB,uBAAGC,wBAAyB,CAACC,OAAQR,EAAKS,qB,yECzC/CC,G,oBAAY,SAACC,EAAUC,GAAX,gBAACD,MAAM,SAAP,IAAWC,MAAM,GACxCC,KAAKC,MAAMD,KAAKE,SAAWJ,GAAOC,IAKvBI,EAAsB,WAEjC,IADA,IAAMC,EAAa,GACVC,EAAI,EAAGA,EAAIR,IAAaQ,IAC/BD,EAAWE,KAAX,+CAEgBT,EAAU,KAF1B,KAEmCA,EAAU,KAF7C,iBALK,SAAYG,KAAKE,UAAY,GAAK,IAAO,GAAGK,SAAS,KAAKC,OAAO,GAKtE,4BAIkBX,EAAU,IAAK,IAJjC,kBAQF,OAAOO,EAAWK,KAAK,MCbnBC,EAAiBjD,IAAOC,IAAV,4EAAGD,CAAH,mDAGE,SAAAE,GAAK,OAAIA,EAAMC,MAAM+C,OAAOC,SA6TnC5B,IA/SS,WACtB,IAQI6B,EACAC,EATEC,EACc,oBAAXC,SACNA,OAAOC,WAAaD,OAAOE,aAAe,EAKzCC,EAAQ,EAINC,EAAgB,GAClBC,GAAqB,EACrBC,EAAuB,CAACC,EAAG,KAAMC,EAAG,MACpCC,GAAgB,EAChBC,EAA0B,GAC1BC,GAAwB,EAGtBC,EAAW,CAACL,EAAG,EAAGC,EAAG,EAAGK,GAAI,EAAGC,GAAI,EAAGC,EADrB,MA+DjBC,EAAc,SAACC,EAAuBC,GAC1C,GAAKT,EAAL,CACA,GAAyB,iBAAdH,EAAQC,GAAuC,iBAAdD,EAAQE,EAAgB,CAClE,IAAMW,EAAKF,EAAgBX,EAAQC,EACjCa,EAAKF,EAAgBZ,EAAQE,EAE/BI,EAASC,GACPD,EAASC,GAAMM,EAAK,EAAKhB,GAASE,EAAqB,GAAK,GAC9DO,EAASE,GACPF,EAASE,GAAMM,EAAK,EAAKjB,GAASE,EAAqB,GAAK,GAGhEC,EAAU,CAACC,EAAGU,EAAeT,EAAGU,KAG5BG,EAAe,SAACC,GACpBnB,EAAQH,OAAOuB,kBAAoB,EAEnC1B,EAAcG,OAAOC,WAAaE,EAClCL,EAAeE,OAAOE,YAAcC,EAEpCmB,EAAOE,MAAQ3B,EACfyB,EAAOG,OAAS3B,EA5BhBM,EAAMsB,SAAQ,SAACC,GACbA,EAAKpB,EAAIvB,KAAKE,SAAWW,EACzB8B,EAAKnB,EAAIxB,KAAKE,SAAWY,MA+BvB8B,EAAa,SAACC,GAClBC,QAAQC,IAAI,eAEZzB,EAAU,CAACC,EAAG,KAAMC,EAAG,MACvBC,GAAiBoB,EACjBjB,EAASG,EAAIc,EAAe,GA/FP,MAkGjBG,EAAYC,IAAMC,OAA0B,MArHtB,EAsHED,IAAME,SAClC,MADKC,EAtHqB,KAsHZC,EAtHY,KAgS5B,OAtKAJ,IAAMK,WAAU,WACd,IAAMC,EAAkB,SAACC,GACvBnC,GAAqB,EACrBW,EAAYwB,EAAMC,QAASD,EAAME,UAG7BC,EAAkB,SAACH,GACvBnC,GAAqB,EACrBW,EAAYwB,EAAMI,QAAQ,GAAGH,QAASD,EAAMI,QAAQ,GAAGF,SACvDF,EAAMK,kBAGFC,EAAmB,WACvBzC,GAAqB,EACrBC,EAAU,CAACC,EAAG,KAAMC,EAAG,OAGnBuC,EAAmB,WACvB1C,GAAqB,EACrBC,EAAU,CAACC,EAAG,KAAMC,EAAG,OAGnBwC,EAAe,WACnB3B,EAAaW,EAAUiB,UAGnBC,EAAc,SAACV,GACnBZ,EAAWY,EAAMW,OAAS,IAgCtBC,EAAkB,SAACZ,IANL,SAACA,GACnB9B,EAAUA,EAAQ2C,QAChB,SAAAC,GAAQ,OAAIA,EAASC,YAAcf,EAAMe,aAK3CC,CAAYhB,GACR9B,EAAQ+C,OAAS,IAAG9C,GAAwB,IAGlD,GAAIqB,EAAUiB,QAAS,CACrB,IAAMS,EAAY1B,EAAUiB,QAAQU,WAAW,MAE/C,GAAID,EAAW,CACb,IAAMpC,EAASU,EAAUiB,QACzB3B,EAAOsC,iBAAiB,eAvCF,SAACpB,GACzB9B,EAAQpB,KAAKkD,MAuCXlB,EAAOsC,iBAAiB,eApCF,SAACpB,GACzB,IAAK,IAAInD,EAAI,EAAGA,EAAIqB,EAAQ+C,OAAQpE,IAClC,GAAImD,EAAMe,YAAc7C,EAAQrB,GAAGkE,UAAW,CAC5C7C,EAAQrB,GAAKmD,EACb,MAGJ,GAAsB,GAAlB9B,EAAQ+C,OAAa,CACvB,IAAMI,EAA0B7E,KAAK8E,IACnCpD,EAAQ,GAAG+B,QAAU/B,EAAQ,GAAG+B,SAElCb,EACEjB,EAAuB,GACrBkD,EAA0BlD,GAE9BA,EAAuBkD,MAsBvBvC,EAAOsC,iBAAiB,YAAaR,GACrC9B,EAAOsC,iBAAiB,gBAAiBR,GACzC9B,EAAOsC,iBAAiB,aAAcR,GACtC9B,EAAOsC,iBAAiB,eAAgBR,GAExCpD,OAAO4D,iBAAiB,QAASV,GACjClD,OAAO4D,iBAAiB,SAAUZ,GAClC1B,EAAOsC,iBAAiB,YAAarB,GACrCjB,EAAOsC,iBAAiB,YAAajB,GACrCrB,EAAOsC,iBAAiB,WAAYb,GACpCgB,SAASH,iBAAiB,aAAcd,GAExCT,EAAWqB,IAIf,GAAItB,EAAS,CACX,IAuBM4B,EAAS,WACbpD,EAASC,IAAM,IACfD,EAASE,IAAM,IAEfF,EAASL,GAAkC,IAA5BK,EAASC,GAAKD,EAASL,GACtCK,EAASJ,GAAkC,IAA5BI,EAASE,GAAKF,EAASJ,GAEtCJ,EAAMsB,SAAQ,SAAAC,GACZA,EAAKpB,GACHK,EAASL,EAAIoB,EAAKZ,GACjBY,EAAKpB,EAAIV,EAAc,GAAKe,EAASG,EAAIY,EAAKZ,EACjDY,EAAKnB,GACHI,EAASJ,EAAImB,EAAKZ,GACjBY,EAAKnB,EAAIV,EAAe,GAAKc,EAASG,EAAIY,EAAKZ,EAClDY,EAAKZ,GAAKH,EAASG,GAIjBY,EAAKpB,GArPW,IAsPhBoB,EAAKpB,EAAIV,EAtPO,IAuPhB8B,EAAKnB,GAvPW,IAwPhBmB,EAAKnB,EAAIV,EAxPO,KA0BN,SAAC6B,GACnB,IAAIsC,EAAY,IAEVC,EAAKlF,KAAK8E,IAAIlD,EAASL,GAC3B4D,EAAKnF,KAAK8E,IAAIlD,EAASJ,IAErB0D,EAAK,GAAKC,EAAK,KAUfF,EADW,OANTC,EAAKC,EACAnF,KAAKE,SAAWgF,GAAMA,EAAKC,GAAM,IAAM,IAEvCnF,KAAKE,SAAWiF,GAAMD,EAAKC,GAAM,IAAM,KAIlCvD,EAASL,EAAI,EAAI,IAAM,IAEvBK,EAASJ,EAAI,EAAI,IAAM,KAIvCmB,EAAKZ,EAjDc,GAiDK,GAAA/B,KAAKE,SAEX,MAAd+E,GACFtC,EAAKpB,EAAIvB,KAAKE,SAAWW,EACzB8B,EAAKnB,EAAIxB,KAAKE,SAAWY,EACzB6B,EAAKZ,EAAI,IACc,MAAdkD,GACTtC,EAAKpB,GAvDiB,GAwDtBoB,EAAKnB,EAAIV,EAAed,KAAKE,UACN,MAAd+E,GACTtC,EAAKpB,EAAIV,EA1Da,GA2DtB8B,EAAKnB,EAAIV,EAAed,KAAKE,UACN,MAAd+E,GACTtC,EAAKpB,EAAIV,EAAcb,KAAKE,SAC5ByC,EAAKnB,GA9DiB,IA+DC,MAAdyD,IACTtC,EAAKpB,EAAIV,EAAcb,KAAKE,SAC5ByC,EAAKnB,EAAIV,EAjEa,IA0PhBsE,CAAYzC,QA1OA,WACpB,IAAK,IAAItC,EAAI,EAAGA,EAAIU,EAAaV,IAC/Be,EAAMd,KAAK,CACTiB,EAAG,EACHC,EAAG,EACHO,EAtBe,GAsBG,GAAA/B,KAAKE,WAiPzBmF,GACAhD,EAAaW,EAAUiB,SARV,SAAPqB,IACJlC,EAAQmC,UAAU,EAAG,EAAG1E,EAAaC,GACrCkE,IApDA5D,EAAMsB,SAAQ,SAAAC,GACZS,EAAQoC,YACRpC,EAAQqC,QAAU,QAClBrC,EAAQsC,UAlNC,EAkNsB/C,EAAKZ,EAAIZ,EACxCiC,EAAQuC,YACN,qBAAuB,GAAM,GAAM3F,KAAKE,UAAY,IAEtDkD,EAAQoC,YACRpC,EAAQwC,OAAOjD,EAAKpB,EAAGoB,EAAKnB,GAE5B,IAAIqE,EAAqB,EAAbjE,EAASL,EACjBuE,EAAqB,EAAblE,EAASJ,EAGjBxB,KAAK8E,IAAIe,GAAS,KAAKA,EAAQ,IAC/B7F,KAAK8E,IAAIgB,GAAS,KAAKA,EAAQ,IAEnC1C,EAAQ2C,OAAOpD,EAAKpB,EAAIsE,EAAOlD,EAAKnB,EAAIsE,GACxC1C,EAAQ4C,YAoCVC,sBAAsBX,GAKxBA,GAeF,OAZgB,WAEd,GADAlE,EAAMqD,OAAS,EACXzB,EAAUiB,QAAS,CACrB,IAAM3B,EAASU,EAAUiB,QACzB3B,EAAO4D,oBAAoB,YAAa3C,GACxCjB,EAAO4D,oBAAoB,YAAavC,GACxCrB,EAAO4D,oBAAoB,WAAYnC,GACvC/C,OAAOkF,oBAAoB,QAAShC,GACpClD,OAAOkF,oBAAoB,SAAUlC,GACrCe,SAASmB,oBAAoB,aAAcpC,OAI9C,CAACV,IAGF,kBAAC1C,EAAD,CAAgByF,MAAO,CAACC,gBAAiBjG,MACvC,4BACEkG,GAAG,SACHC,IAAKtD,EACLmD,MAAO,CACLI,SAAU,QACV/D,MAAO,OACPC,OAAQ","file":"component---src-pages-blog-tsx-39678d0903b6a41ea918.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const ContentContainer = styled.div`\n  max-width: 68rem;\n  width: calc(100% - 9.25rem * 2);\n  margin: 11rem auto 5rem;\n     position: fixed;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n   ${props => props.theme.media.lg`\n    width: 1.45rem;\n    margin: 8rem auto 3rem;\n    width: calc(100% - 11rem * 2);\n  `}\n  \n  ${props => props.theme.media.md`\n    width: 100%;\n    margin: 4rem auto 0;\n    padding: 0 3rem 6rem;\n  `}\n  \n  ${props => props.theme.media.sm`\n    margin: 2rem auto 0;\n    padding: 0 2rem 6rem;\n  `}\n`;\n\ntype ContentProps = {\n  readonly children: React.ReactNode;\n};\n\nconst Content: React.FC<ContentProps> = ({children}) => (\n  <ContentContainer>{children}</ContentContainer>\n);\n\nexport default Content;\n","import React from 'react';\nimport {Link, graphql} from 'gatsby';\nimport Layout from '../components/Layout';\nimport Stars from '../components/Stars';\nimport Head from '../components/Head';\nimport Content from '../components/Content';\n\ninterface BlogProps {\n  readonly data: PageQueryData;\n}\n\nconst Blog: React.FC<BlogProps> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title=\"Blog\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      {/*todo: stars param to stop them*/}\n      <Stars />\n      <Content>\n        <article>\n          <div className={`page-content`}>\n            {posts.map(({node}) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              return (\n                <div key={node.fields.slug}>\n                  <h3>\n                    <Link to={node.fields.slug}>{title}</Link>\n                  </h3>\n                  <small>{node.frontmatter.date}</small>\n                  <p dangerouslySetInnerHTML={{__html: node.excerpt}} />\n                </div>\n              );\n            })}\n          </div>\n        </article>\n      </Content>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string;\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          date: string;\n          title: string;\n        };\n      };\n    }[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n","export const getRandom = (max = 10, min = 1) =>\n  Math.floor(Math.random() * max) + min;\n\nexport const getRandomColor = () =>\n  '#' + ('00000' + ((Math.random() * (1 << 24)) | 0).toString(16)).slice(-6);\n\nexport const getRandomBackground = () => {\n  const background = [];\n  for (let i = 0; i < getRandom(); i++) {\n    background.push(`\n      radial-gradient(\n        circle at ${getRandom(100)}% ${getRandom(100)}%,\n        ${getRandomColor() + '0d'},\n        transparent ${getRandom(100, 60)}%\n      )\n  `);\n  }\n  return background.join(',');\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport {getRandomBackground} from '../utils';\n\nconst StarsContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.black};\n`;\n\ntype Coordinates = {\n  x: number | null;\n  y: number | null;\n};\n\ntype Star = {\n  x: number;\n  y: number;\n  z: number;\n};\n\nconst Stars: React.FC = () => {\n  const starsNumber =\n    typeof window !== 'undefined' &&\n    (window.innerWidth + window.innerHeight) / 8;\n  const starSize = 3;\n  const starMinScale = 0.2;\n  const overflowThreshold = 50;\n\n  let scale = 1; // device/pixel ratio\n  let windowWidth: number;\n  let windowHeight: number;\n\n  const stars: Star[] = [];\n  let cursorInsideCanvas = false;\n  let pointer: Coordinates = {x: null, y: null};\n  let pointerActive = true;\n  let evCache: PointerEvent[] = [];\n  let prevPointersDistance = -1;\n\n  const normalVelocity = 0.0005;\n  const velocity = {x: 0, y: 0, tx: 0, ty: 0, z: normalVelocity};\n\n  const generateStars = () => {\n    for (let i = 0; i < starsNumber; i++) {\n      stars.push({\n        x: 0,\n        y: 0,\n        z: starMinScale + Math.random() * (1 - starMinScale)\n      });\n    }\n  };\n\n  const recycleStar = (star: Star) => {\n    let direction = 'z';\n\n    const vx = Math.abs(velocity.x),\n      vy = Math.abs(velocity.y);\n\n    if (vx > 1 || vy > 1) {\n      let axis;\n\n      if (vx > vy) {\n        axis = Math.random() < vx / (vx + vy) ? 'h' : 'v';\n      } else {\n        axis = Math.random() < vy / (vx + vy) ? 'v' : 'h';\n      }\n\n      if (axis === 'h') {\n        direction = velocity.x > 0 ? 'l' : 'r';\n      } else {\n        direction = velocity.y > 0 ? 't' : 'b';\n      }\n    }\n\n    star.z = starMinScale + Math.random() * (1 - starMinScale);\n\n    if (direction === 'z') {\n      star.x = Math.random() * windowWidth;\n      star.y = Math.random() * windowHeight;\n      star.z = 0.1;\n    } else if (direction === 'l') {\n      star.x = -overflowThreshold;\n      star.y = windowHeight * Math.random();\n    } else if (direction === 'r') {\n      star.x = windowWidth + overflowThreshold;\n      star.y = windowHeight * Math.random();\n    } else if (direction === 't') {\n      star.x = windowWidth * Math.random();\n      star.y = -overflowThreshold;\n    } else if (direction === 'b') {\n      star.x = windowWidth * Math.random();\n      star.y = windowHeight + overflowThreshold;\n    }\n  };\n\n  const placeStars = () => {\n    stars.forEach((star: Star) => {\n      star.x = Math.random() * windowWidth;\n      star.y = Math.random() * windowHeight;\n    });\n  };\n\n  const movePointer = (userPositionX: number, userPositionY: number) => {\n    if (!pointerActive) return;\n    if (typeof pointer.x === 'number' && typeof pointer.y === 'number') {\n      const ox = userPositionX - pointer.x,\n        oy = userPositionY - pointer.y;\n\n      velocity.tx =\n        velocity.tx - (ox / 8) * scale * (cursorInsideCanvas ? 1 : -1);\n      velocity.ty =\n        velocity.ty - (oy / 8) * scale * (cursorInsideCanvas ? 1 : -1);\n    }\n\n    pointer = {x: userPositionX, y: userPositionY};\n  };\n\n  const resizeCanvas = (canvas: any) => {\n    scale = window.devicePixelRatio || 1;\n\n    windowWidth = window.innerWidth * scale;\n    windowHeight = window.innerHeight * scale;\n\n    canvas.width = windowWidth;\n    canvas.height = windowHeight;\n\n    placeStars();\n  };\n\n  const accelerate = (acceleration: boolean) => {\n    console.log('accelerates');\n\n    pointer = {x: null, y: null};\n    pointerActive = !acceleration;\n    velocity.z = acceleration ? 0.1 : normalVelocity;\n  };\n\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(\n    null\n  );\n\n  React.useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      cursorInsideCanvas = true;\n      movePointer(event.clientX, event.clientY);\n    };\n\n    const handleTouchMove = (event: TouchEvent) => {\n      cursorInsideCanvas = true;\n      movePointer(event.touches[0].clientX, event.touches[0].clientY);\n      event.preventDefault();\n    };\n\n    const handleMouseLeave = () => {\n      cursorInsideCanvas = false;\n      pointer = {x: null, y: null};\n    };\n\n    const handleTouchLeave = () => {\n      cursorInsideCanvas = false;\n      pointer = {x: null, y: null};\n    };\n\n    const handleResize = () => {\n      resizeCanvas(canvasRef.current);\n    };\n\n    const handleWheel = (event: WheelEvent) => {\n      accelerate(event.deltaY < 0);\n    };\n\n    const handlePointerDown = (event: PointerEvent) => {\n      evCache.push(event);\n    };\n\n    const handlePointerMove = (event: PointerEvent) => {\n      for (let i = 0; i < evCache.length; i++) {\n        if (event.pointerId === evCache[i].pointerId) {\n          evCache[i] = event;\n          break;\n        }\n      }\n      if (evCache.length == 2) {\n        const currentPointersDistance = Math.abs(\n          evCache[0].clientX - evCache[1].clientX\n        );\n        accelerate(\n          prevPointersDistance > 0 &&\n            currentPointersDistance > prevPointersDistance\n        );\n        prevPointersDistance = currentPointersDistance;\n      }\n    };\n\n    const removeEvent = (event: PointerEvent) => {\n      evCache = evCache.filter(\n        evCached => evCached.pointerId !== event.pointerId\n      );\n    };\n\n    const handlePointerUp = (event: PointerEvent) => {\n      removeEvent(event);\n      if (evCache.length < 2) prevPointersDistance = -1;\n    };\n\n    if (canvasRef.current) {\n      const renderCtx = canvasRef.current.getContext('2d');\n\n      if (renderCtx) {\n        const canvas = canvasRef.current;\n        canvas.addEventListener('pointerdown', handlePointerDown);\n        canvas.addEventListener('pointermove', handlePointerMove);\n        canvas.addEventListener('pointerup', handlePointerUp);\n        canvas.addEventListener('pointercancel', handlePointerUp);\n        canvas.addEventListener('pointerout', handlePointerUp);\n        canvas.addEventListener('pointerleave', handlePointerUp);\n\n        window.addEventListener('wheel', handleWheel);\n        window.addEventListener('resize', handleResize);\n        canvas.addEventListener('mousemove', handleMouseMove);\n        canvas.addEventListener('touchmove', handleTouchMove);\n        canvas.addEventListener('touchend', handleTouchLeave);\n        document.addEventListener('mouseleave', handleMouseLeave);\n\n        setContext(renderCtx);\n      }\n    }\n\n    if (context) {\n      const renderStars = () => {\n        stars.forEach(star => {\n          context.beginPath();\n          context.lineCap = 'round';\n          context.lineWidth = starSize * star.z * scale;\n          context.strokeStyle =\n            'rgba(255,255,255,' + (0.5 + 0.5 * Math.random()) + ')';\n\n          context.beginPath();\n          context.moveTo(star.x, star.y);\n\n          let tailX = velocity.x * 2;\n          let tailY = velocity.y * 2;\n\n          // stroke() wont work on an invisible line\n          if (Math.abs(tailX) < 0.1) tailX = 0.5;\n          if (Math.abs(tailY) < 0.1) tailY = 0.5;\n\n          context.lineTo(star.x + tailX, star.y + tailY);\n          context.stroke();\n        });\n      };\n\n      const update = () => {\n        velocity.tx *= 0.96;\n        velocity.ty *= 0.96;\n\n        velocity.x += (velocity.tx - velocity.x) * 0.8;\n        velocity.y += (velocity.ty - velocity.y) * 0.8;\n\n        stars.forEach(star => {\n          star.x +=\n            velocity.x * star.z +\n            (star.x - windowWidth / 2) * velocity.z * star.z;\n          star.y +=\n            velocity.y * star.z +\n            (star.y - windowHeight / 2) * velocity.z * star.z;\n          star.z += velocity.z;\n\n          // recycle when out of bounds\n          if (\n            star.x < -overflowThreshold ||\n            star.x > windowWidth + overflowThreshold ||\n            star.y < -overflowThreshold ||\n            star.y > windowHeight + overflowThreshold\n          ) {\n            recycleStar(star);\n          }\n        });\n      };\n\n      const step = () => {\n        context.clearRect(0, 0, windowWidth, windowHeight);\n        update();\n        renderStars();\n        requestAnimationFrame(step);\n      };\n\n      generateStars();\n      resizeCanvas(canvasRef.current);\n      step();\n    }\n\n    const cleanup = () => {\n      stars.length = 0;\n      if (canvasRef.current) {\n        const canvas = canvasRef.current;\n        canvas.removeEventListener('mousemove', handleMouseMove);\n        canvas.removeEventListener('touchmove', handleTouchMove);\n        canvas.removeEventListener('touchend', handleTouchLeave);\n        window.removeEventListener('wheel', handleWheel);\n        window.removeEventListener('resize', handleResize);\n        document.removeEventListener('mouseleave', handleMouseLeave);\n      }\n    };\n    return cleanup;\n  }, [context]);\n\n  return (\n    <StarsContainer style={{backgroundImage: getRandomBackground()}}>\n      <canvas\n        id=\"canvas\"\n        ref={canvasRef}\n        style={{\n          position: 'fixed',\n          width: '100%',\n          height: '100%'\n        }}\n      />\n    </StarsContainer>\n  );\n};\n\nexport default Stars;\n"],"sourceRoot":""}