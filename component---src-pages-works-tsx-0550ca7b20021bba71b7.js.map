{"version":3,"sources":["webpack:///./src/pages/works.tsx"],"names":["SectionHeader","styled","div","SectionTitle","h2","props","theme","fontSizes","mediumLarge","fontWeights","regular","MoreLink","Link","colors","light","normal","bold","darkest","pageQuery","Works","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","keywords","normalVelocity","containerOpacity","addEventListeners","to"],"mappings":"4FAAA,0KAUMA,EAAgBC,IAAOC,IAAV,2EAAGD,CAAH,wDAKbE,EAAeF,IAAOG,GAAV,0EAAGH,CAAH,oCACH,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,eAC7B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,WAE5CC,EAAWV,YAAOW,QAAV,sEAAGX,CAAH,8SACH,SAAAI,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,SACjB,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,MAAQ,QAC3C,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,UAAUQ,UAC7B,SAAAV,GAAK,OAAIA,EAAMC,MAAMG,YAAYO,QAarC,SAAAX,GAAK,OAAIA,EAAMC,MAAMO,OAAOI,WACjB,SAAAZ,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,SAmGvCI,EAAY,YAqCVC,UAhHqB,SAAC,GAAW,IAAVC,EAAU,EAAVA,KAC9BC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAgBL,EAAKM,kBAAkBC,MAE7C,OACE,kBAAC,IAAD,CAAQH,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,OACNI,SAAU,CAAC,OAAD,0DASZ,kBAAC,IAAD,CACEC,eAAgB,KAChBC,iBAAkB,GAClBC,mBAAmB,IAErB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,cACA,kBAAC,IAAD,oCAEF,kBAAC,IAAD,KACE,kBAAC/B,EAAD,KACE,kBAACG,EAAD,qBACA,kBAACQ,EAAD,CAAUqB,GAAG,SAAb,cAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWP,MAAOA,MAGtB,kBAAC,IAAD,KACE,kBAACzB,EAAD,KACE,kBAACG,EAAD,wBACA,kBAACQ,EAAD,CAAUqB,GAAG,SAAb,iBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWP,MAAOA","file":"component---src-pages-works-tsx-0550ca7b20021bba71b7.js","sourcesContent":["import React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport Head from '../components/Head';\nimport Layout from '../components/Layout';\nimport Stars from '../components/Stars';\nimport Content from '../components/Content';\nimport {PostsList} from '../components/postsList';\nimport styled from 'styled-components';\nimport {Header, Title, Description, Section, SectionBody} from '../styles';\n\nconst SectionHeader = styled.div`\n  padding-left: 1rem;\n  display: flex;\n  align-items: center;\n`;\nconst SectionTitle = styled.h2`\n  font-size: ${props => props.theme.fontSizes.mediumLarge};\n  font-weight: ${props => props.theme.fontWeights.regular};\n`;\nconst MoreLink = styled(Link)`\n  color: ${props => props.theme.colors.light};\n  background-color: ${props => props.theme.colors.light + '40'};\n  font-size: ${props => props.theme.fontSizes.normal};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  border-radius: 5px;\n  box-sizing: border-box;\n  text-decoration: none;\n  display: block;\n  padding: 0.4rem 0.6rem;\n  border-bottom: 0;\n  white-space: nowrap;\n  line-height: 1;\n  margin: 0.2rem 0 0.2rem 1rem;\n  transition: 0.4s ease;\n\n  &:hover {\n    color: ${props => props.theme.colors.darkest};\n    background-color: ${props => props.theme.colors.light};\n  }\n`;\n\ninterface WorksProps {\n  readonly data: PageQueryData;\n}\n\ninterface Post {\n  node: {\n    id: string;\n    excerpt: string;\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      date: string;\n      title: string;\n      tags: string[];\n      featuredImage: any;\n    };\n  };\n}\n\nconst Works: React.FC<WorksProps> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts: Post[] = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout title={siteTitle}>\n      <Head\n        title=\"Blog\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `typescript`,\n          `javascript`,\n          `portfolio`,\n          `react`\n        ]}\n      />\n      <Stars\n        normalVelocity={0.0001}\n        containerOpacity={0.3}\n        addEventListeners={false}\n      />\n      <Content>\n        <Header>\n          <Title>Works</Title>\n          <Description>Stuff I do and write about</Description>\n        </Header>\n        <Section>\n          <SectionHeader>\n            <SectionTitle>Latest posts</SectionTitle>\n            <MoreLink to=\"/blog\">All posts</MoreLink>\n          </SectionHeader>\n          <SectionBody>\n            <PostsList posts={posts} />\n          </SectionBody>\n        </Section>\n        <Section>\n          <SectionHeader>\n            <SectionTitle>Latest projects</SectionTitle>\n            <MoreLink to=\"/blog\">All projects</MoreLink>\n          </SectionHeader>\n          <SectionBody>\n            <PostsList posts={posts} />\n          </SectionBody>\n        </Section>\n      </Content>\n    </Layout>\n  );\n};\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        id: string;\n        excerpt: string;\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          date: string;\n          title: string;\n          tags: string[];\n          featuredImage: any;\n        };\n      };\n    }[];\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n      limit: 3\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Works;\n"],"sourceRoot":""}